package kr.or.ddit.subject.controller;

import java.util.List;

import javax.inject.Inject;

import org.springframework.security.core.Authentication;
import org.springframework.stereotype.Controller;
import org.springframework.ui.Model;
import org.springframework.validation.Errors;
import org.springframework.validation.annotation.Validated;
import org.springframework.web.bind.annotation.GetMapping;
import org.springframework.web.bind.annotation.ModelAttribute;
import org.springframework.web.bind.annotation.PostMapping;
import org.springframework.web.bind.annotation.RequestMapping;
import org.springframework.web.bind.annotation.RequestParam;
import org.springframework.web.bind.annotation.ResponseBody;

import kr.or.ddit.commons.dao.CommDAO;
import kr.or.ddit.member.vo.MemberVOWrapper;
import kr.or.ddit.professor.vo.ProfessorVO;
import kr.or.ddit.student.vo.StudentVO;
import kr.or.ddit.subject.dao.SubjectDAO;
import kr.or.ddit.subject.service.SubjectService;
import kr.or.ddit.subject.vo.SubjectVO;
import kr.or.ddit.validate.InsertGroup;
import kr.or.ddit.vo.Pagination;
import kr.or.ddit.vo.SimpleCondition;

@Controller
@RequestMapping("/subject")
public class SubjectManageController {
	@Inject
	private SubjectService subService;
	@Inject
	private CommDAO commDAO;
	@Inject
	private SubjectDAO subjectDAO;
	
	@RequestMapping("/subjectManagement.do")
	public String getUI(
			Authentication authentication
			,Model model
			) {
		MemberVOWrapper memVOW = (MemberVOWrapper) authentication.getPrincipal();
		String proNo = memVOW.getRealUser().getMemNo();
		ProfessorVO proVO = subjectDAO.temporaryProfessor(proNo);
		
		SubjectVO subject = new SubjectVO();
		subject.setColNo(proVO.getColNo());
		subject.setDeptNo(proVO.getDeptNo());
		model.addAttribute("insertForm",subject);
		
		model.addAttribute("commList", commDAO.selectCommList(null));
		
		
		return "subject/subjectManagement";
	}
	
	/**
	 * 리스트
	 * @param currentPage
	 * @param simpleCondition
	 * @return
	 */
	@RequestMapping(produces = "application/json;charset=utf-8" , value = "/subjectManagement.do")
	@ResponseBody
	public Pagination<SubjectVO> subjectList(
			@RequestParam(value = "page", required = false, defaultValue = "1") int currentPage
			, @ModelAttribute("simpleCondition") SimpleCondition simpleCondition
			){
		Pagination<SubjectVO> pagination = new Pagination<SubjectVO>(5, 3);
		pagination.setCurrentPage(currentPage);
		pagination.setSimpleCondition(simpleCondition);
		
		subService.retrieveSubjectList(pagination);
		
		return pagination;
		
	}
	/**
	 * 요청 리스트
	 * @param currentPage
	 * @param simpleCondition
	 * @return
	 */
	@GetMapping(produces = "application/json;charset=utf-8" , value = "/reqSubjectList.do")
	@ResponseBody
	public Pagination<SubjectVO> reqSubjectList(
			@RequestParam(value = "page", required = false, defaultValue = "1") int currentPage
			, @ModelAttribute("reqSimpleCondition") SimpleCondition simpleCondition
			){
		Pagination<SubjectVO> pagination = new Pagination<SubjectVO>(5, 3);
		pagination.setCurrentPage(currentPage);
		pagination.setReqSimpleCondition(simpleCondition);
		
		subService.reqRetrieveSubjectList(pagination);
		
		return pagination;
		
	}
	
	/**
	 * 상세보기
	 * @param subNo
	 * @return
	 */
	@RequestMapping(produces = "application/json;charset=utf-8", value = "/subjectView.do")
	@ResponseBody
	public SubjectVO subjectView(
			@RequestParam("what") String subNo
			) {
		return subService.retrieveSubject(subNo);
		
	}
	
	/**
	 * 등록
	 * @param subject
	 * @param errors
	 * @return
	 */
	@PostMapping(produces = "application/json;charset=utf-8", value = "/subjectInsert.do")
	@ResponseBody
	public Integer subjectInsert(
			@Validated(InsertGroup.class) @ModelAttribute("insertForm") SubjectVO subject
			, Errors errors
			) {
		Integer cnt = 0;
		System.err.println("체킁");
		if(!errors.hasErrors()) {
			subService.createSubject(subject);
			cnt = 1;
		}
		return cnt;
	}
	
	

}
