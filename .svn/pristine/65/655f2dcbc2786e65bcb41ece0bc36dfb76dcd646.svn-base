package kr.or.ddit.lecture.vo;

import java.sql.Date;
import java.util.Arrays;
import java.util.stream.Collectors;

import javax.validation.constraints.NotBlank;

import org.springframework.web.multipart.MultipartFile;

import kr.or.ddit.attatch.vo.AttatchFileGroupVO;
import kr.or.ddit.attatch.vo.AttatchFileVO;
import lombok.Data;

@Data
public class LectureDataVO {
 // filegroupVO
	private int rnum;
	@NotBlank
	private String	lectNo;
	@NotBlank
	private String	ldTitle;
	@NotBlank
	private String	ldContent;
	@NotBlank
	private Date	ldWdate;
	//파일--------------------------------------------------------
		private Integer	ldFile;
		private String atchCount;

		private MultipartFile[] lectFiles; //인서트
		private MultipartFile[] addFiles;//업데이트

		private AttatchFileGroupVO atchFileGroup; //인서트
		private AttatchFileGroupVO addFileGroup; //업데이트
		private AttatchFileGroupVO delFileGroup; //딜리트

		// 인서트 셋
		public void setStuFiles(MultipartFile[] lectFiles) {
			if(lectFiles==null || lectFiles.length==0) return;

			this.lectFiles = lectFiles;

			this.atchFileGroup.setAtchfileList(
					Arrays.stream(lectFiles)
					.filter((lf)->!lf.isEmpty())
					.map((lf)->new AttatchFileVO(lf))
					.collect(Collectors.toList())
					);
		}
		//업데이트 셋
		public void setAddFiles(MultipartFile[] addFiles) {
			if(addFiles==null || addFiles.length==0) return;

			this.addFiles = addFiles;

			this.addFileGroup = new AttatchFileGroupVO();
			addFileGroup.setAtchfileList(
					Arrays.stream(addFiles)
					.filter((lf)->!lf.isEmpty())
					.map((lf)-> new AttatchFileVO(lf))
					.collect(Collectors.toList())
					);
		}
}
