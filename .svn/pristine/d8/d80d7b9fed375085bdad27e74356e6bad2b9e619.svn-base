package kr.or.ddit.student.service;

import java.io.File;
import java.util.List;
import java.util.Map;

import javax.inject.Inject;

import org.springframework.beans.factory.annotation.Value;
import org.springframework.security.crypto.factory.PasswordEncoderFactories;
import org.springframework.security.crypto.password.PasswordEncoder;
import org.springframework.stereotype.Service;

import kr.or.ddit.attatch.service.AttatchFileGroupService;
import kr.or.ddit.attatch.vo.AttatchFileGroupVO;
import kr.or.ddit.dgrade.dao.DgradeDAO;
import kr.or.ddit.dgrade.vo.DgradeVO;
import kr.or.ddit.member.dao.MemberDAO;
import kr.or.ddit.student.dao.StudentDAO;
import kr.or.ddit.student.vo.StudentVO;
import kr.or.ddit.vo.Pagination;
import lombok.extern.slf4j.Slf4j;

@Slf4j
@Service
public class StudentServiceImpl implements StudentService {

	@Inject
 	private StudentDAO studentDAO;
	@Inject
	private DgradeDAO dgradeDAO;
	@Inject
	private MemberDAO memberDAO;
	   
	@Inject
	private AttatchFileGroupService fileService;
	   
	@Value("#{appInfo['memberfiles']}")
	private File saveFolder;
	
	@Inject
	private PasswordEncoder encoder = PasswordEncoderFactories.createDelegatingPasswordEncoder();

	
	@Override
	public List<StudentVO> retrieveStudentList(Pagination<StudentVO> pagination) {
		pagination.setTotalRecord(studentDAO.selectTotalRecord(pagination));
		List<StudentVO> studentList = studentDAO.selectStudentList(pagination);
		pagination.setDataList(studentList);
		return studentList;
	}


	@Override
	public int createStudent(StudentVO student) {
		// 1. 졸업 요건 테이블 insert
		DgradeVO dgrade = new DgradeVO();
		dgrade.setDeptNo(student.getDeptNo());
		dgrade.setMemNo(student.getMemNo());
		dgradeDAO.insertStuDgrade(dgrade);
		
		student.setDrNo(dgrade.getDrNo());
		log.info("student : {}", student);
		
		// 2. member 테이블 insert
		student.setMemRole("ROLE_STU");
		
	    String encoded = encoder.encode(student.getMemRrno1());
	    student.setMemPass(encoded);
	    
		memberDAO.insertMember(student);
		
		// 3. student 테이블 insert
		studentDAO.insertStudent(student);
		
		return 0;
	}


	@Override
	public String retrieveStudentNoForDept(Map<String, String> param) {
		return studentDAO.selectStudentNoForDept(param);
	}

	
}
