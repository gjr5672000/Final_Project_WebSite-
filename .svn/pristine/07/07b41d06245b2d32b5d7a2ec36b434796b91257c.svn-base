<%@ page language="java" contentType="text/html; charset=UTF-8"
	pageEncoding="UTF-8"%>
<style>
.tab-base .nav-tabs, .tab-base .nav-tabs .nav-link {
	width: 50px;
}

.table-fixed {
	width: 100%;
	background-color: #f3f3f3;
}

tbody {
	height: 200px;
	overflow-y: auto;
	width: 100%;
}

table {
	border: 1px solid bl;
}

.tab-content {
	height: 500px;
	width: 1100px;
	position: relative; /* This is new */
}

/* This is new */
.d-flex.justify-content-end.mt-2 {
	position: absolute;
	bottom: 20px;
	right: 20px;
}

ion-icon {
	font-size: 64px;
}

button {
	margin: 1px;
}
</style>
<div class="col-md-12 mb-3">
	<!-- Vertical tabs with base -->
	<div class="tab-base tab-vertical">
		<ul class="nav nav-tabs" role="tablist">
			<li class="nav-item" role="presentation">
				<button class="nav-link active" data-bs-toggle="tab"
					data-bs-target="#_dm-verTabsHome" type="button" role="tab"
					aria-controls="home" aria-selected="true">홈</button>
			</li>
			<li class="nav-item" role="presentation">
				<button class="nav-link" data-bs-toggle="tab"
					data-bs-target="#_dm-verTabsProfile" type="button" role="tab"
					aria-controls="profile" aria-selected="false">나의커리</button>
			</li>
			<li class="nav-item" role="presentation">
				<button class="nav-link" data-bs-toggle="tab"
					data-bs-target="#_dm-verTabsContact" type="button" role="tab"
					aria-controls="contact" aria-selected="false">이달의 선배</button>
			</li>
		</ul>

		<!-- Tabs content -->
		<div class="tab-content">
			<div id="_dm-verTabsHome" class="tab-pane fade show active"
				role="tabpanel" aria-labelledby="home-tab">
				<div class="row" id="myTest"
					style="display: grid; grid-template-columns: repeat(8, 1fr);">
				</div>
				<div id="_dm-verTabsHome" class="tab-pane fade show active"
					role="tabpanel" aria-labelledby="home-tab">
					<div class="row" id="myTest"
						style="display: grid; grid-template-columns: repeat(8, 1fr);">
					</div>
					<!-- Buttons -->
					<!-- Buttons -->
					<div class="d-flex justify-content-end mt-2">
						<form action="/path_to_server_endpoint" method="post">
							<label for="curriName">나의 커리 명 :</label> <input type="text"
								id="curriName" name="curriName">
							<button type="button" id="saveBtn" class="btn btn-success">저장</button>
							<button type="button" class="btn btn-secondary"
								onclick="resetInputs()">취소</button>
					</div>
				</div>
			</div>

		</div>
	</div>

</div>
</div>

<div style="display: grid; grid-template-columns: 1fr;">
	<div style="display: grid; grid-template-columns: 1fr;">
		<div class="space m-3 p-5">
			<div class="card">
				<div class="card-body overflow-scroll scrollable-content"
					style="height: 200px;">
					<table
						class="table table-hover text-center scrolltable table-fixed">
						<thead>
							<tr>
								<th>교과목번호</th>
								<th>학과명</th>
								<th>단과대학명</th>
								<th>교과목명</th>
								<th>학년</th>
								<th>학점</th>
								<th>교과목유형</th>
								<th></th>
							</tr>
						</thead>
						<tbody id="listBody" data-view-url="">
						</tbody>
						</div>
						<tfoot>
							<tr>
								<td colspan="6">
									<div id="searchUI" class="row d-flex justify-content-center">
										<div class="col-auto">
											<select name="searchType" class="form-control">
												<option value>전체</option>
												<option value="name">과제명</option>
											</select>
										</div>
										<div class="col-auto">
											<input type="text" name="searchWord"
												class="form-control col-auto" />
										</div>
										<div class="col-auto">
											<input type="button" value="검색" id="searchBtn"
												class="btn btn-primary" />
										</div>
									</div>
								</td>
							</tr>
						</tfoot>
					</table>
				</div>
			</div>
		</div>
		<form name="searchForm">
			<input type="hidden" name="searchType" placeholder="searchType" /> <input
				type="hidden" name="searchWord" placeholder="searchWord" />
		</form>
		<script src="https://code.jquery.com/ui/1.12.1/jquery-ui.min.js"></script>
		<script src="${cPath}/resources/js/myCurri/myCurri.js"></script>
		<script>
			const youTest = document.querySelector("#myTest");
			const fmkTbl = (data) => {
				let eightTbl = "";
				let period = ["1-1", "1-2", "2-1", "2-2", "3-1", "3-2", "4-1", "4-2"];
				for (let i = 0; i < 8; i++) {
					eightTbl += `
		        <div>
		        <table class="table table-hover text-center">
		            <tbody>
		                <tr>
		                    <th>\${period[i]}</th>
		                </tr>`;
					for (let j = 1; j <= 7; j++) {
						eightTbl += `
		                <tr>
		                    <td class="\${(i+1)*100 + j}"></td>
		                </tr>`;
					}
					eightTbl += `
		            </tbody>
		        </table>
		        </div>`;
				}
				youTest.innerHTML = eightTbl;
			}

			fmkTbl();
			$(function() {
			    // 모든 td 요소를 드래그 가능하도록 설정합니다.
			    $("#myTest td").draggable({
			        helper: "clone",  // 드래그 중인 원본 요소의 복제본을 생성합니다.
			        revert: "invalid"  // 드랍 가능한 영역 외부로 드래그한 경우, 요소를 원래 위치로 되돌립니다.
			    });

			    // 모든 td 요소를 드랍 가능하도록 설정합니다.
			    $("#myTest td").droppable({
			        accept: "#myTest td",  // #myTest 테이블의 td 요소만을 드랍 대상으로 허용합니다.
			        drop: function(event, ui) {
			            // 드랍된 요소 (ui.helper)와 드랍 대상 (this)의 텍스트를 서로 바꿉니다.
			            var droppedText = $(ui.helper).text();
			            var targetText = $(this).text();
			            $(this).text(droppedText);
			            $(ui.draggable).text(targetText);
			        }
			    });
			});

			function resetInputs() {
			    const inputs = document.querySelectorAll('input[type="text"]');
			    inputs.forEach(input => {
			        input.value = '';
			    });

			    const tds = document.querySelectorAll('#myTest td');
			    tds.forEach(td => {
			        td.innerText = '';
			    });

			    const hiddenRows = document.querySelectorAll('#listBody tr:hidden');
			    hiddenRows.forEach(row => {
			        row.style.display = '';
			    });
			}

			// "저장" 버튼을 눌렀을 때의 동작을 정의합니다.
			$("#saveBtn").click(function(e) {
			    e.preventDefault();  // "저장" 버튼의 기본 동작을 막습니다.

			    // form에서 입력된 커리 이름을 가져옵니다.
			    let curriName = $('#curriName').val();

			    let dataToSave = [];

			    // 모든 td의 데이터를 배열에 넣습니다.
			    $("#myTest td").each(function() {
			        let cellData = $(this).data("subNo"); // subNo를 가져옵니다.
			        if(cellData) {
			            dataToSave.push(cellData);
			        }
			    });

			    // AJAX 요청을 통해 데이터를 서버에 전송합니다.
			    $.ajax({
			        url: '${cPath}/curri/myCurri.do/curriInsert', // 이 부분을 실제 서버 URL로 변경해야 합니다.
			        type: 'POST',
			        data: JSON.stringify({
			            'curriName': curriName,
			            'dataToSave': dataToSave
			        }), // 데이터를 JSON 형태로 전송
			        contentType: 'application/json',
			        success: function(response) {
			            // 서버에서 성공적으로 응답을 받았을 때의 처리
			            console.log(response);
			        },
			        error: function(error) {
			            // 오류가 발생했을 때의 처리
			            console.log(error);
			        }
			    });
			});

			$("#myTest td").off().on("click", function() {
			    $(this).text(subName);
			    $(this).data("subNo", board.subNo); // subNo를 data-* 속성으로 저장
			    parentTr.hide();
			    $("#myTest td").off("click");  // 클릭 이벤트를 제거합니다.
			});
			let listBody = $("#listBody");
			let fn_makeTr = function(board){
			    let btn = $("<button>")
			        .addClass("btn btn-icon btn-info btn-xs")
			        .html('<ion-icon name="add-outline"></ion-icon>')
			        .click(function() {
			            let parentTr = $(this).parent().parent();
			            let subName = parentTr.children().eq(3).text();

			            // myTest 테이블의 각 td에 클릭 이벤트를 추가합니다.
			            // 클릭된 td에 subName이 추가되고, 원래의 tr이 사라집니다.
			            // 이후 클릭 이벤트는 제거됩니다.
			            $("#myTest td").off().on("click", function() {
			                $(this).text(subName);
			                parentTr.hide();
			                $("#myTest td").off("click");  // 클릭 이벤트를 제거합니다.
			            });
			        });

			    return $("<tr>").append(
			        $("<td>").html(board.subNo)
			        , $("<td>").html(board.deptName)
			        , $("<td>").html(board.colName)
			        , $("<td>").html(board.subName)
			        , $("<td>").html(board.subGrade)
			        , $("<td>").html(board.subScr)
			        , $("<td>").html(board.colName)
			        , $("<td>").html(btn)
			    );
			}
			// 전역 변수를 선언하여 이전에 클릭된 td를 추적합니다.


			let searchForm = $("[name=searchForm]").on("submit", function(event){
			   event.preventDefault();
			   let url = this.action;
			   let method = this.method;
			   let data = $(this).serialize();
			   $.ajax({
			      url : url,
			      method : method,
			      data : data,
			      dataType : "json"
			   }).done(function(resp, textStatus, jqXHR) {
			      console.log(resp);
			      listBody.empty();

			      let trTags = [];
			      if(resp.length > 0){
			         $.each(resp, function(idx, board){
			            trTags.push( fn_makeTr(board) );
			         });
			      }else{
			         trTags.push($("<tr>").html($("<td colspan='3'>").html("교과목 없음.")));
			      }
			      listBody.append(trTags);
			   });
			   return false;
			}).submit();

			let searchUI = $("#searchUI").on("click", "#searchBtn" , function(){
			   $(this).parents("#searchUI").find(":input[name]").each(function(idx, input){
			      let iptName = input.name;
			      let iptValue = $(input).val();
			      searchForm.find(`[name=${iptName}]`).val(iptValue);
			   });
			   searchForm.submit();
			});

		</script>