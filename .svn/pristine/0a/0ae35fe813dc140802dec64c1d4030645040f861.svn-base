package kr.or.ddit.asgn.service;

import java.io.File;
import java.util.ArrayList;
import java.util.List;
import java.util.Optional;

import javax.inject.Inject;

import org.springframework.beans.factory.annotation.Value;
import org.springframework.security.core.Authentication;
import org.springframework.security.core.context.SecurityContextHolder;
import org.springframework.stereotype.Service;

import kr.or.ddit.asgn.dao.AsgnDAO;
import kr.or.ddit.asgn.vo.AsgnSubmitVO;
import kr.or.ddit.asgn.vo.AsgnVO;
import kr.or.ddit.attatch.service.AttatchFileGroupService;
import kr.or.ddit.attatch.vo.AttatchFileGroupVO;
import kr.or.ddit.attatch.vo.AttatchFileVO;
import kr.or.ddit.member.vo.MemberVOWrapper;

@Service
public class AsgnServiceImpl implements AsgnService {
	@Inject
	private AsgnDAO asgnDAO;
	
	@Inject
	private AttatchFileGroupService fileService;
	
	@Value("#{appInfo['as.attatchPath']}")
	private File saveFolder;
	
	
	
	
	
//---------------학생이 사용----------------------------------	

	@Override
	public int createdAsgnSubmit(AsgnSubmitVO asgnSubmit) {
		// 인증객체 꺼내기
		Authentication authentication 
			= SecurityContextHolder.getContext().getAuthentication();
		AttatchFileGroupVO atchFileGroup = asgnSubmit.getAtchFileGroup();
		Optional.ofNullable(atchFileGroup)
				.ifPresent((afg)->{
					//1. 파일서비스에서 metadata랑 이진데이터 넣고 1:N처리
					fileService.createAttatchFileGroup(afg, saveFolder);
					//2. C.O에 파일그룹에서 그룹id를 받아와서 저장한다.1:1처리
					asgnSubmit.setAsFile(afg.getAtchId()); 
				});
		return asgnDAO.insertAsgnSubmit(asgnSubmit);
	}

	@Override
	public List<AsgnVO> retrieveAsgnList(String lectNo) {
		// 인증객체에서 학번 꺼내기.
		Authentication authentication = SecurityContextHolder.getContext().getAuthentication();
		MemberVOWrapper memVO = (MemberVOWrapper)authentication.getPrincipal();
		String stuNo = memVO.getRealUser().getMemNo();
		
		// 과제제출객체 선언 -> 전달받은 정보 저장할 과제제출객체
		AsgnSubmitVO asVO = new AsgnSubmitVO();
		
		// 과제정보 리스트 조회 -> 리턴할 강의당과제 조회결과
		List<AsgnVO> asgnList = asgnDAO.selectAsgnList(lectNo); 
		
		// 과제제출 리스트 선언
		List<AsgnSubmitVO> asList = new ArrayList<>();
		// 하나의 과제마다 한 학생의 제출정보 가져오기 ->asgnList만들기 위한 것!
		for(AsgnVO asgn : asgnList) {
			// 전달받은 정보 객체에 담기
			String asgnNo = asgn.getAsgnNo();
			asVO.setAsgnNo(asgnNo);
			asVO.setStuNo(stuNo);
			// 전달받은 정보로 asgnSubmit 조회
			AsgnSubmitVO asVOall = asgnDAO.selectAsgnSubmit(asVO);
			// 조회 결과가 있으면 리스트추가
			if(asVOall!=null) {
				asList.add(asVOall);
			}
		}
		return asgnList;
	}

	@Override
	public AsgnVO retrieveAsgn(String asgnNo) {
		// 인증객체에서 학번 꺼내기.
		Authentication authentication = SecurityContextHolder.getContext().getAuthentication();
		MemberVOWrapper memVO = (MemberVOWrapper)authentication.getPrincipal();
		String stuNo = memVO.getRealUser().getMemNo();

		// 강의과제 하나 조회하기
		AsgnVO asgnVO = asgnDAO.selectAsgn(asgnNo);
		
		// 과제제출객체 생성
		AsgnSubmitVO asVO = new AsgnSubmitVO();
		asVO.setAsgnNo(asgnNo);
		asVO.setStuNo(stuNo);
		
		// 과제제출객체 조회
		List<AsgnSubmitVO> asVOList = new ArrayList<>();
		AsgnSubmitVO asVOall = asgnDAO.selectAsgnSubmit(asVO);
		asVOList.add(asVOall);
		// 강의과제객체에 넣기
		asgnVO.setAsgnSubmitList(asVOList);
		
		return asgnVO;
	}
	
	@Override
	public AttatchFileVO download(AttatchFileVO condition) {
		AttatchFileVO atchFile = fileService.retrieveAttatchFile(condition, saveFolder);
		if(atchFile==null) throw new RuntimeException(String.format("%d, %d 번 파일이 없음", condition.getAtchId(), condition.getAtchSeq()));
		return atchFile;
	}
//	@Override
//	public int removeAsgnSubmit(AsgnSubmitVO asgnSubmit) {
//		return 0;
//	}
	
//	@Override
//	public List<AsgnVO> retrieveAsgnList(String lectNo) {
//		return asgnDAO.selectAsgnList(lectNo);
//	}
//
//	@Override
//	public AsgnVO retrieveAsgn(AsgnSubmitVO asVO) {
//		return asgnDAO.selectAsgn(asVO);
//	}

}
