package kr.or.ddit.curri.controller;

import java.util.List;

import javax.inject.Inject;

import org.springframework.http.MediaType;
import org.springframework.security.core.Authentication;
import org.springframework.security.core.context.SecurityContextHolder;
import org.springframework.stereotype.Controller;
import org.springframework.ui.Model;
import org.springframework.web.bind.annotation.GetMapping;
import org.springframework.web.bind.annotation.PathVariable;
import org.springframework.web.bind.annotation.PostMapping;
import org.springframework.web.bind.annotation.RequestMapping;
import org.springframework.web.bind.annotation.RequestParam;
import org.springframework.web.bind.annotation.ResponseBody;
import org.springframework.web.servlet.mvc.support.RedirectAttributes;

import kr.or.ddit.curri.dao.MyCurriDAO;
import kr.or.ddit.curri.dao.TagDAO;
import kr.or.ddit.curri.service.CurriBoardService;
import kr.or.ddit.curri.service.MyCurriService;
import kr.or.ddit.curri.vo.CurriBoardVO;
import kr.or.ddit.curri.vo.CurriDetailVO;
import kr.or.ddit.curri.vo.CurriVO;
import kr.or.ddit.curri.vo.TagVO;
import kr.or.ddit.member.vo.MemberVO;
import kr.or.ddit.member.vo.MemberVOWrapper;
import kr.or.ddit.vo.Pagination;
import lombok.extern.slf4j.Slf4j;

@Slf4j
@Controller
@RequestMapping("/curri/everyCurri")
public class EveryCurriController {

	@Inject
	private CurriBoardService cbService;
	@Inject
	private MyCurriService curriService;
	@Inject
	private TagDAO tagDAO;

//------------------------------------- 모두의 커리 리스트
	@GetMapping
	public String getEveryCurriListUI() {
		return "curri/everyCurri";
	}
	
	@PostMapping
	@ResponseBody
	public Pagination<CurriBoardVO> selectCurriList(
		@RequestParam(value = "page", required = false, defaultValue = "1") int currentPage
		, CurriBoardVO detailCondition
		){
		Pagination<CurriBoardVO> pagination = new Pagination<>();
		
		pagination.setCurrentPage(currentPage);
		pagination.setDetailCondition(detailCondition);
		
		log.info("pagination : {}", pagination);
		
		cbService.retrieveCurriBoardList(pagination);
		
		return pagination;
	}
	
	@PostMapping("tagRank")
	@ResponseBody
	public List<TagVO> getTagRank(){
		return tagDAO.getTagRank(5);
	}

//------------------------------------- 모두의 커리 등록
	@GetMapping("form")
	public String getEveryCurriFormUI(Authentication authentication, Model model) {
		List<CurriVO> myList = curriService.retrieveCurriList(authentication.getName());
		model.addAttribute("myList", myList);

		return "curri/everyCurri/form";
	}

	@PostMapping("form")
	public String insertEveryCurri(CurriBoardVO curriBoard, RedirectAttributes attributes) {
		log.info("curriBoard : {}", curriBoard);

		Authentication authentication = SecurityContextHolder.getContext().getAuthentication();
		MemberVOWrapper wrapper = (MemberVOWrapper) authentication.getPrincipal();
		MemberVO member = wrapper.getRealUser();

		curriBoard.setCbWriter(member.getMemNo());
		curriBoard.setMemName(member.getMemName());

		int res = cbService.createCurriBoard(curriBoard);

		// 등록 성공 시 , 등록한 board view로 redirect
		if (res > 0) {
			// 뷰 만들고 바꾸기
			attributes.addFlashAttribute("message", "뷰 만들고 뷰로가기");
			return "redirect:/curri/everyCurri";

		} else {
			// 등록 실패 시 , 등록 폼
			attributes.addFlashAttribute("message", "등록에 실패했습니다. 잠시후 다시 시도해주세요.");
			return "redirect:/curri/everyCurri/form";
		}

	}



}
