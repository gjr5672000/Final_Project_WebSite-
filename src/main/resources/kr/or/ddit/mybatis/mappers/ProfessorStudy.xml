<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="kr.or.ddit.professor.dao.ProfessorDAO">
<!-- ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~ -->
<!-- <sql id="seachFrag"> -->
<!-- 	FROM STUDY INNER JOIN PROFESSOR ON (STUDY.PRO_NO = PROFESSOR.PRO_NO) -->
<!--     INNER JOIN MEMBER ON (PROFESSOR.PRO_NO = MEMBER.MEM_NO) -->
<!-- 		<where> -->
<!-- 			<if  -->
<!-- 			test="simpleCondition neq null and @org.apache.commons.lang3.StringUtils@isNotBlank(simpleCondition.searchWord)"> -->
<!-- 				<choose> -->
<!-- 					<when test="simpleCondition.searchType eq 'studyName'"> -->
<!-- 						INSTR(STUDY_NAME, #{simpleCondition.searchWord}) > 0 -->
<!-- 					</when> -->
<!-- 					<when test="simpleCondition.searchType eq 'studySubject'"> -->
<!-- 						INSTR(STUDY_SUBJECT, #{simpleCondition.searchWord}) > 0 -->
<!-- 					</when> -->
<!-- 					<otherwise> -->
<!-- 						INSTR(STUDY_NAME, #{simpleCondition.searchWord}) > 0 -->
<!-- 						OR -->
<!-- 						INSTR(STUDY_SUBJECT, #{simpleCondition.searchWord}) > 0 -->
<!-- 					</otherwise> -->
				
<!-- 				</choose> -->
<!-- 			</if> -->
<!-- 		</where> -->
<!-- </sql> -->
<!-- ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~ -->
<!-- 검색은 연구명, 주제 또는 같이 -->
<!-- <select id="selectTotalRecord" resultType="int" parameterType="Pagination"> -->
<!-- 	SELECT COUNT(*) -->
<!-- 	FROM STUDY INNER JOIN PROFESSOR ON (STUDY.PRO_NO = PROFESSOR.PRO_NO) -->
<!--     INNER JOIN MEMBER ON (PROFESSOR.PRO_NO = MEMBER.MEM_NO) -->
<!-- </select> -->
<!-- ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~ -->
<select id="selectStudyList" resultType="StudyVO">
	SELECT B.*
	FROM
	(	
		SELECT A.*, ROWNUM RNUM
		FROM(
			SELECT
			    STUDY_NO,
			    STUDY.PRO_NO,
			    STUDY_NAME,
			    STUDY_SDATE,
			    STUDY_EDATE,
			    STUDY_SUBJECT,
			    STUDY_PURPOSE,
			    MEM_NAME,
			    (
			        SELECT COUNT(*)
			        FROM ATCH_FILE
			        WHERE STUDY_FILE = ATCH_ID 
			    )ATCH_COUNT
		    FROM STUDY INNER JOIN MEMBER ON (STUDY.PRO_NO = MEMBER.MEM_NO)
		    ORDER BY STUDY_NO DESC
		    ) A
	) B
<!-- 	<![CDATA[ -->
<!-- 	WHERE RNUM >=#{startRow} AND RNUM <=#{endRow} -->
<!-- 	]]> -->
</select>
<!-- ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~ -->
<resultMap type="StudyVO" id="studyMap" autoMapping="true">
	<id property="studyNo" column="STUDY_NO"/>
	<!-- has a --><!-- property : VO의멤버변수-->
	<association property="atchFileGroup" javaType="AttatchFileGroupVO">
		<id property="atchId" column="ATCH_ID"/>
		<collection property="atchfileList" ofType="AttatchFileVO" autoMapping="true" />
	</association>
</resultMap>

<select id="selectStudy" resultMap="studyMap" parameterType="string">
		SELECT
		    STUDY_NO,
		    PRO_NO,
		    STUDY_NAME,
		    STUDY_SDATE,
		    STUDY_EDATE,
		    STUDY_SUBJECT,
		    STUDY_PURPOSE,
		    STUDY_FILE,
		    MEM_NAME,
		    
		    ATCH_ID,
		    ATCH_SEQ,
		    ATCH_MIME,
		    ATCH_ORGIN_NAME,
		    ATCH_SAVE_NAME,
		    ATCH_SIZE,
		    ATCH_DATE
		FROM
		    STUDY INNER JOIN MEMBER ON (PRO_NO = MEM_NO) 
		    LEFT OUTER JOIN ATCH_FILE ON (STUDY_FILE = ATCH_ID)
		    WHERE STUDY_NO = #{studyNo}
</select>
<!-- ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~ -->
<insert id="insertStudy" parameterType="StudyVO">
<selectKey order="BEFORE" resultType="String" keyProperty="studyNo">
	SELECT #{proNo} || LPAD(NVL(TO_NUMBER(SUBSTR(MAX(STUDY_NO), LENGTH(#{proNo})+1)), '0') +1, 3, '0') 
	FROM STUDY
	WHERE PRO_NO = #{proNo}
</selectKey>
	INSERT INTO STUDY (
	    STUDY_NO,
	    PRO_NO,
	    STUDY_NAME,
	    STUDY_SDATE,
	    STUDY_SUBJECT,
	    STUDY_PURPOSE,
	    STUDY_FILE
	) VALUES (
	      #{studyNo,jdbcType=VARCHAR}
	    , #{proNo,jdbcType=VARCHAR}
	    , #{studyName,jdbcType=VARCHAR}
	    , SYSDATE
	    , #{studySubject,jdbcType=VARCHAR}
	    , #{studyPurpose,jdbcType=VARCHAR}
	    , #{studyFile,jdbcType=NUMERIC}
	)

</insert>
<!-- ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~ -->
<update id="updateStudy" parameterType="StudyVO">
	UPDATE STUDY
	    SET
	         STUDY_NAME = #{studyName,jdbcType=VARCHAR}
	        , STUDY_EDATE = SYSDATE
	        , STUDY_SUBJECT = #{studySubject,jdbcType=VARCHAR}
	        , STUDY_PURPOSE = #{studyPurpose,jdbcType=VARCHAR}
	        , STUDY_FILE = #{studyFile,jdbcType=NUMERIC}
	        
	WHERE
	    STUDY_NO = #{studyNo} AND PRO_NO = #{proNo}
	
</update>
<delete id="deleteStudy" parameterType="StudyVO">
	DELETE FROM STUDY
	WHERE 
		STUDY_NO = #{studyNo} AND PRO_NO = #{proNo}
</delete>



</mapper>